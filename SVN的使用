版本控制概述：
为什么需要：
      1.如何实现项目的整体管理
      2.小组成员之间协调
      3.统一管理小组成员各自承担的子项目
      4.统一汇总小组成员所做的修改
      5.保留修改的痕迹
      6.对各个版本进行标识，管理及差异辨识
      在软件开发过程中，发现改错了，或者需要获取最新的版本，又或者不小心删除了文件。
      CVS Concurrent Version System
      SVN Subversion 取代了CVS 集中式控制   
       优点：（1）符合一般人的思维习惯
                 （2）集中式的安全性比较高
                 （3）适合于开发人数不多的项目
        缺点：（1）服务器压力比较大
                  （2）不可脱机操作
     
      Git Georgia Instituts of Technology 分布式版本控制器   每个开发者都有一个服务器的数据库        
       优点：（1）可脱机操作
                 （2）公共服务器压力小
                 （3）容易解决冲突
                  （4）速度快，灵活
        缺点：（1）不符合常规思维
                   （2）学习周期相对较长
                   （3）文件保密性差      
SVN客户端：
在Window中使用SVN,安装客户端TortoiseSVN,下载地址:http://tortoisesvn.net/downloads.html,下载简体中文包LanguagePack,下载地址：
http://tortoisesvn.net/downloads.html。直接点击安装客户端即可，然后点击安装中文包，不需要做任何操作。完成后右键可以看到svn的菜单。
       SVN常用的操作：检出（从版本库获取文件保存到本地），显示日志（查看版本），加入（将当前文件提交到待提交的列表当中），
 提交（将文件提交到版本库当中），更新至版本（切换到你指定的版本），删除（与加入很相似），还原（还原至你未修改的版本），
 锁定解锁（对当前文件加锁，其他人不能修改），更新（获取到版本库的最新版本）等。
SVN服务器：
安装VisualSVN Server ,下载地址http://www.visualsvn.com/visualsvn/download
点击安转即可，安装过程中，location表示安转的路径，Repositories表示版本库的位置，注意选择端口和http协议还是https协议。树形菜单，分别表示版本库，用户和组
（1）创建版本库：Repostorise---->create new repositorise------>输入版本库名称--->OK
（2）创建文件夹:选中上面创建好的Respositorise ---->create folder-->OK
（3）创建用户:选中User--->create user
（4）创建组:（组的含义是将一组具有相同权限的用户添加为一组）选中group添加组，将你需要的用户添加进组。然后给予相应的权限。
（5）设置权限（继承，无权，只读，读写）:选中上面创建好的文件夹，右键点击权限设置，在弹出的对话框中选择用户，然后给予read/write 或者no Access
（无权限）权限，登录做一个测试。
版本控制的访问地址：选中你创建好的库，在右边有显示。
在Eclipse中使用SVN:
下载安装SVN插件Subclipse,下载地址http://subclipse.tigris.org

       



                            
